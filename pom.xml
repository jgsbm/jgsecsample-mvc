<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>jgs.bluemix</groupId>
    <artifactId>jgsecsample-mvc</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <!-- generic properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.7</java.version>

        <!-- library version -->
        <spring-framework.version>4.1.6.RELEASE</spring-framework.version>
        <spring-security.version>3.2.7.RELEASE</spring-security.version>
        <spring-security-jwt.version>1.0.3.RELEASE</spring-security-jwt.version>
        <mybatis.version>3.2.3</mybatis.version>
        <mybatis-spring.version>1.2.2</mybatis-spring.version>
        <thymeleaf.version>2.1.4.RELEASE</thymeleaf.version>
        <aspect.version>1.8.5</aspect.version>
        <hibernate-validator.version>5.1.3.Final</hibernate-validator.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <jackson.version>2.5.1</jackson.version>
        <webjars-bootstrap.version>3.3.4</webjars-bootstrap.version>
        <webjars-jquery.version>1.11.2</webjars-jquery.version>
        <mongo-java-driver.version>2.13.2</mongo-java-driver.version>
        <log4mongo.version>0.7.4</log4mongo.version>
        <log4j.version>1.2.17</log4j.version>
        <slf4j.version>1.7.11</slf4j.version>
        <logback.version>1.1.3</logback.version>
        <lombok.version>1.16.2</lombok.version>
        <junit.version>4.12</junit.version>
    </properties>

    <dependencies>
        <!-- servlet api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- spring framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring-framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring-framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>

        <!-- Aspect -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspect.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspect.version}</version>
        </dependency>

        <!-- thymeleaf -->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf</artifactId>
            <version>${thymeleaf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring4</artifactId>
            <version>${thymeleaf.version}</version>
        </dependency>

        <!-- WebJars -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${webjars-bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${webjars-jquery.version}</version>
        </dependency>

        <!-- O/R Mapper -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring.version}</version>
        </dependency>
        <!-- TODO PaaS環境では不要 -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
            <version>8.0.23</version>
        </dependency>

        <!-- jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Logger -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.6</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!-- database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.187</version>
        </dependency>

        <!-- Database connection pool -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons-dbcp.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <!--cache-->
                <dependency>
                    <!--
                      ThirdParty製のjar(DataCache)を自プロジェクトから解決する.
                      ライセンス等の関係上、サードパーティ製jarはGithub上にjarをpushできないため、
                      clone後に個別に${basedir}/lib/配下にjarを格納する必要がある.
                      また、当サンプルではsystemスコープを利用しているが、対象のjarをmavenのlocal repositoryに直接installしても良い.
                      この場合は、scopeをsystemではなくprovided指定できるため、当該サードパーティ製jarの依存性がデプロイ先サーバに含まれる場合は、
                      サードパーティ製jarをwarファイルに内包しない形でのDeployが実施可能となる.
                    -->
                    <groupId>ogclient</groupId>
                    <artifactId>ogclient</artifactId>
                    <version>1.0</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/ogclient.jar</systemPath>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.1</version>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>product</id>
            <dependencies>
                <dependency>
                    <groupId>ogclient</groupId>
                    <artifactId>ogclient</artifactId>
                    <version>1.0</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/ogclient.jar</systemPath>
                </dependency>
                <dependency>
                    <groupId>org.mongodb</groupId>
                    <artifactId>mongo-java-driver</artifactId>
                    <version>${mongo-java-driver.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.log4mongo</groupId>
                    <artifactId>log4mongo-java</artifactId>
                    <version>${log4mongo.version}</version>
                </dependency>
            </dependencies>
            <build>
                <resources>
                    <!-- Production環境用の設定ファイルの上書き -->
                    <resource>
                        <directory>src/production/resources</directory>
                    </resource>
                    <resource>
                        <directory>src/main/resources</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.1</version>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>travis</id>
            <activation>
                <file>
                    <!-- travis.yml内で当該ファイルをtouchすることでmaven profileを有効化する -->
                    <exists>travis-mvn-profile.activate</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.1</version>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <excludes>
                                <!--
                                　　TravisCIはサードパーティjar（DataCache）に依存するクラスの検証は実施対象外とする.
                                   実際にDeployを行ったうえで自動テスト等を実施する場合は、別途profileを定義し、
                                   サードパーティ製jarの依存性を解決できる状態としてビルド／デプロイを実施する必要がある.
                                   本プロジェクトではCIはコンパイル、および単体テストレベルの実施となっているため、単純にCI対象を狭めることで対応を行う.
                                   [注意]
                                   MavenCompilerPluginはコンパイル対象のクラスが依存しているクラスが存在する場合、
                                   当該クラスがexclude指定されていたとしてもコンパイル対象とする.
                                   そのため、直接サードパーティに依存していなくとも、関連するクラスを全てexcludeする必要がある.
                                   (この振る舞いのために、サードパーティ製ライブラリに直接依存しないReviewCacheやOrderControllerについてもexclude扱いとしている)
                                -->
                                <exclude>**/CacheManager.java</exclude>
                                <exclude>**/DataCache.java</exclude>
                                <exclude>**/ReviewCache.java</exclude>
                                <exclude>**/OrderController.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!--<context:property-placeholder location="classpath:spring/data-access.properties"/>-->

    <!--<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close"-->
          <!--p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"-->
          <!--p:username="${jdbc.username}" p:password="${jdbc.password}"/>-->

    <!--
    <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/xxx"/>
    -->

    <!--<jdbc:initialize-database data-source="dataSource">-->
        <!--<jdbc:script location="${jdbc.initLocation}"/>-->
        <!--<jdbc:script location="${jdbc.dataLocation}"/>-->
    <!--</jdbc:initialize-database>-->

    <!-- DataSource -->
    <!-- オンプレミス相当環境のDataSourceを定義する -->
    <jdbc:embedded-database id="onpremisesDataSource" type="H2">
        <jdbc:script location="classpath:schema_customer.sql" />
        <jdbc:script location="classpath:schema_review.sql" />
        <jdbc:script location="classpath:data_customer.sql" />
    </jdbc:embedded-database>

    <!-- Cloud相当環境のDataSourceを定義する -->
    <jdbc:embedded-database id="cloudDataSource" type="H2">
        <jdbc:script location="classpath:schema_product.sql" />
        <jdbc:script location="classpath:data_product.sql" />
    </jdbc:embedded-database>

    <bean id="onpremisesSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="onpremisesDataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

    <bean id="cloudSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="cloudDataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

    <bean id="onpremisesTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="onpremisesDataSource" />
    </bean>

    <bean id="cloudTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="cloudDataSource" />
    </bean>

    <!-- Mapper location -->
    <bean id="onpremisesMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jgs.bluemix.sample.persistence.onpremises" />
        <property name="sqlSessionFactoryBeanName" value="onpremisesSqlSessionFactory" />
    </bean>
    <bean id="cloudMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="jgs.bluemix.sample.persistence.cloud" />
        <property name="sqlSessionFactoryBeanName" value="cloudSqlSessionFactory" />
    </bean>

</beans>